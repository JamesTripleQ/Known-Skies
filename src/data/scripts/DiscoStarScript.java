package disco.scripts;

import com.fs.starfarer.api.Global;
import com.fs.starfarer.api.SoundAPI;
import com.fs.starfarer.api.campaign.*;
import com.fs.starfarer.api.campaign.econ.MarketAPI;
import com.fs.starfarer.api.campaign.rules.MemoryAPI;
import com.fs.starfarer.api.impl.campaign.ids.Entities;
import com.fs.starfarer.api.util.Misc;
import com.fs.starfarer.api.util.WeightedRandomPicker;
import org.lwjgl.util.vector.Vector2f;

import java.awt.*;
import java.util.LinkedList;
import java.util.List;

public class DiscoStarScript extends BaseCampaignEventListenerAndScript {

    public static final List<Color> colourList =  new LinkedList<Color>(){{
        add(new Color(100, 255, 237, 255));
        add(new Color(255, 145, 253, 255));
        add(new Color(255, 50, 50, 255));
        add(new Color(210, 230, 255, 255));
        add(new Color(183, 50, 255, 255));
        add(new Color(255, 225, 125, 255));
        add(new Color(62, 150, 62, 255));
        add(new Color(46, 60, 255, 255));
        add(new Color(245, 250, 255, 255));
        add(new Color(100, 255, 100, 255));
        add(new Color(255, 90, 50, 255));
        add(new Color(255, 175, 94, 255));
        add(new Color(244, 255, 94, 255));
    }};

    public PlanetAPI star;
    public JumpPointAPI jumpPoint = null;
    private WeightedRandomPicker<Color> picker = new WeightedRandomPicker<>();
    private transient SoundAPI caramelDansen;
    private final Object loop1 = new Object();
    private final Object loop2 = new Object();
    public boolean done = false;
    private boolean isMuted = false;

    float count = 0;
    //float total = 0;

    public DiscoStarScript(PlanetAPI star) {
        super();
        this.star = star;


    }

    @Override
    public boolean isDone() {
        return done || star.getContainingLocation() == null;
    }

    public void stopDansen(){
        if(caramelDansen != null) caramelDansen.stop();
        caramelDansen = null;
    }

    public void setMuted(boolean muted) {
        isMuted = muted;
    }

    public void setVolumeZero(){
        if(caramelDansen != null) caramelDansen.setVolume(0f);
    }

    @Override
    public boolean runWhilePaused() {
        return true;
    }

    @Override
    public void advance(float amount) {
        if(done || star == null || star.getContainingLocation() == null){
            stopDansen();
            return;
        }

        playDansen(amount);
    }

    public void setDone(boolean done) {
        this.done = done;

        if (done){
            Global.getLogger(DiscoStarScript.class).info("deleting dansen");

            stopDansen();
            Global.getSector().removeListener(this);
        }
    }

    public void playDansen(float amount){
        /*CampaignFleetAPI playerFleet = Global.getSector().getPlayerFleet();
        SectorAPI sector = Global.getSector();

        if (sector.isPaused()
                || isMuted
                || star.getContainingLocation() != playerFleet.getContainingLocation()
                || sector.getCampaignUI().isShowingDialog()
                || sector.getCampaignUI().isShowingMenu()
                || sector.getCampaignUI().getCurrentInteractionDialog() != null) {

            setVolumeZero();
            total += getAdjustedAmt(amount);
            return;
        }

        if (star == null) {
            setDone(true);
            return;
        }

        //float vol = Math.min(1f, 250f / Misc.getDistance(playerFleet, star));
        float vol = 250F;

        //TODO: this doesn't trigger so use Cabal's music system instead
        //TODO: THIS WAS BASICALLY FIXED KINDA... SONG MIGHT RESTART A LOT
        if (caramelDansen == null || total > 178f) {
            total = 0;
            caramelDansen = Global.getSoundPlayer().playSound("carameldansen", 1f, vol, star.getLocation(), Misc.ZERO);
        }

        caramelDansen.setVolume(vol);
        caramelDansen.setLocation(star.getLocation().x, star.getLocation().y);*/

        //TODO: NONE OF THR JUMPPOINTS CODE WORKS
        CampaignFleetAPI playerFleet = Global.getSector().getPlayerFleet();
        if(jumpPoint == null && playerFleet.isInHyperspace()) {
            for (JumpPointAPI j : star.getStarSystem().getAutogeneratedJumpPointsInHyper()) {
                if(j.isStarAnchor()){
                    jumpPoint = j;
                }
            }
        }

        if (playerFleet != null
                && star.getContainingLocation() == playerFleet.getContainingLocation()
                && !Global.getSector().getCampaignUI().isShowingDialog()
                && !Global.getSector().getCampaignUI().isShowingMenu()
                && Global.getSector().getCampaignUI().getCurrentInteractionDialog() == null) {

            float vol1 = Math.min(1f, 250000f / Misc.getDistance(playerFleet, star));
            float vol2 = Math.min(1f, 250f / Misc.getDistance(playerFleet, star));

            Global.getSoundPlayer().playLoop("carameldansen", loop1, 1f, vol1, star.getLocation(), Misc.ZERO);
            if(jumpPoint != null){
                Global.getSoundPlayer().playLoop("carameldansen", loop2, 1f, vol2, jumpPoint.getLocation(), Misc.ZERO);
            }
        }


        float add = getAdjustedAmt(amount);
        count += add;
        //total += add;

        if (count > 0.365f) {
            if (picker.isEmpty()) picker.addAll(colourList);

            Color nextColor = picker.pickAndRemove();

            star.setLightColorOverrideIfStar(nextColor);
            star.getSpec().setPlanetColor(nextColor);
            star.getSpec().setAtmosphereColor(nextColor);
            star.getSpec().setCloudColor(nextColor);
            //star.getSpec().setIconColor(nextColor);
            star.getSpec().setCoronaColor(nextColor);
            star.getSpec().setGlowColor(nextColor);
            star.getSpec().setShieldColor(nextColor);
            star.getSpec().setShieldColor2(nextColor);
            star.applySpecChanges();

            //star.setSecondLight(nextColor);
            star.getStarSystem().setLightColor(nextColor);
            count = 0;
        }
    }

    @Override
    public void reportFleetJumped(CampaignFleetAPI fleet, SectorEntityToken from, JumpPointAPI.JumpDestination to) {
        super.reportFleetJumped(fleet, from, to);

        if (fleet.isPlayerFleet()) {
            if (to != null && to.getDestination() != null && star.getContainingLocation() == to.getDestination().getContainingLocation()) playDansen(0);
            else setVolumeZero();
        }
    }

    private float getAdjustedAmt(float amount) {
        boolean fast = Global.getSector().getCampaignUI().isFastForward();
        return fast ? amount / 2f : amount;
    }

}
